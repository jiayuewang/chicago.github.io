<% var rootPath = '../../../'; %>
<!DOCTYPE HTML>
<html>
    <head>
        <%- include(rootPath + 'partials/includes'); %>
    </head>
    <body>
        <%- include(rootPath + 'partials/nav'); %>
        <link rel="stylesheet" href="css/page.css">

        <div class="homeImg">
            <div class="homeDiv center">
                    <h1 class="titleMain cenX"><span class="backW">Machine Learning and AI</span></h1>
                    <h3 class="regTitle cenX"><span class="backW">Internships and Courses' project</span></h3>
            </div>

            <div class="cenX padB60 homeSouth">
                <a class="btn btn-primary btn-lg" href="releases/APathfinding-Visual.jar" role="button" download>Download .jar</a>
                <a class="linkGrey" id="srcCode" href="https://github.com/jiayuewang">View source code</a>
            </div>
        </div>

        <div class="container-fluid backDark sec">
            <div class="container">
                <h3 class="subTitle white">Neural Network Compression</h3>
                <p class="subText white extPad" id="desc">I Achieved deep Learning compression on CNN, RNN and LSTM. My compression Algorithms on CNN, AlexNet and VGGNet with ImageNet 35X~50X. including weights sharing and Huffman coding. (TensorFlow, Python, Caffe, Python, Linux)Iteratively finding its achievable sparsity for each layer, prune away 86% parameters. Submitted Publication, AAAI 2019. https://github.com/jiayuewang/Compressiom-with-CNN-RNN-SLT</p>
            </div>
        </div>

        <div class="container-fluid sec">
            <div class="container">
                <h3 class="subTitle">Search</h3>
                <p class="subP"></p>
                    <ul class="listPad minpadY">
                        <li>I built general-purpose search algorithms and apply them to solving puzzles. In charge of a "Pacman" agent that needs to find paths through mazes to eat a dot or "food pellets." Finding a single path that goes through all the dots in the maze. Same as creation, except right click!</li>
                    </ul>
            </div>

            <div class="container">
                <h3 class="subTitle">Configuration Space Planning</h3>
                <p class="subP"></p>
                    <ul class="listPad minpadY">
                        <li>I wrote code that transforms a 2D planning problem for a robotic arm into a configuration space<br/><br/>
                    then searches for a path in that space.</li>
                    <img src="images/diagonal.gif" width="90%" class="centerImg padB40"></img>
            </div>

               

            <div class="container">
                <h3 class="subTitle">Application of Naive Bayes</h3>
                <p class="subP"></p>
                <ul class="listPad minpadY">
                    <li>Spam emails are a common issue we all encounter! I used the Naive Bayes algorithm to train a Spam classifier with a dataset of emails. The task is to learn a bag of words (unigram) model that will classify an email as Spam depending on the words present in it.</li>
                </ul>
                <p class="subP"></p>
                <img src="images/timed.gif" width="90%" class="centerImg padY40"></img>
            </div>

            <div class="container">
                <h3 class="subTitle">Audio-Visual Database Synthesis</h3>
                <p class="subP"></p>
                    <ul class="listPad minpadY">
                        <li>I got familiar with face modeling and animation techniques, learn to use ANNs(artificial neural networks) to map features of speech signals to facial animation parameters, and produce facial animation sequences from the audio tracks.</li>
                    <img src="images/diagonal.gif" width="90%" class="centerImg padB40"></img>
            </div>
            <div class="container">
                <h3 class="subTitle">Speech Synthesis</h3>
                <p class="subP"></p>
                    <ul class="listPad minpadY">
                        <li>The main objective of this experiment is to reproduce high quality speech signal for both clean and noisy signal from analysing the speech input. There are 3 main procedures in this experiment. Analysis: short-time processing of speech signal is firstly applied, then pitch estimation, pitch refinement and parameter estimation of spectral envelope and the excitation at each frequency band for each speech frame are undertaken. Synthesis: speech signal is reconstructed using the estimated parameters from analysis. This is done by synthesizing the voiced and unvoiced parts of the speech in time and frequency domains accordingly. Application of Synthesis Algorithm to Speech Signals: Apply the algorithm to a given clean signal s5.wav, a noisy version of s5.wav and a signal of own voice and compare the spectrograms of the original and the synthetic speech.</li>
                    <img src="images/advanced.gif" width="90%" class="centerImg padY40"></img>
            </div>
            <div class="container">
                <h3 class="subTitle">Hmm Speach Recognition</h3>
                <p class="subP"></p>
                    <ul class="listPad minpadY">
                        <li>The main objective of this experiment is to implement a speech recognizer using Hidden Markov Model (HMM) to recognize certain words. Our Data Corpus includes 100 different audio files: 4 speakers: mh, ls, dg, yx 5 words: “CNN”, “DNN”, “ASR”, “TTS”, “HMM” 5 utterances of each word per speaker.There are 4 main procedures in this experiment: Extracting audio features. Splitting training and testing data. Training the Gaussian HMM model for speech recognition. Evaluating the model.</li>
            </div>

                  <div class="container">
                <h3 class="subTitle">Video Recognition</h3>
                <p class="subP"></p>
                    <ul class="listPad minpadY">
                        <li>The main objective of this machine problem is to develop and train a convolutional neural network (CNN) in order to distinguish between elephant and lionfish. The image data is from the ImageNet database and mini-batch gradient descent will be used to train the CNN.Visit the <a href="#">github page</a> for details
                    on how to run, and obtain the executables.</li>
                   <img src="images/c.PNG" width="90%" class="centerImg padY40"></img>
            </div>
            </div>

        <div class="container-fluid btnLinks extPad">
            <div class="container">
                <div class="row">
                    <div class="col-md-4 bot">
                        <div class="leftCenter">
                            <h3 class="sub2">FOUND A BUG?</h3>
                            <p class="subText">Let me know on github</p>
                            <a class="btn btn-success btn-lg w100" href="https://github.com/jiayuewang</a>
                        </div>
                    </div>
                    <div class="col-md-4 bot">
                        <div class="leftCenter">
                            <h3 class="sub2">CONTRIBUTE</h3>
                            <p class="subText">Take part in the project</p>
                            <a class="btn btn-secondary btn-lg w100" href="/contact" role="button">Contact Me</a>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="leftCenter">
                            <h3 class="sub2">GET FOR FREE</h3>
                            <p class="subText">No install necessary</p>
                            <a class="btn btn-primary btn-lg w100" href="releases/" role="button" download>Download</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <%- include(rootPath + 'partials/footer'); %>
    </body>
</html>
